{"ast":null,"code":"/**\n * React Router DOM v6.18.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n} // One-time check for submitter support\n\n\nlet _formDataSupportsSubmitter = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"), // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n\n  return _formDataSupportsSubmitter;\n}\n\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\n\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n\n  return encType;\n}\n\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n\n\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType; // Build a FormData object populated from a form and submitter\n\n    formData = new FormData(form, target); // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  } // Send body for <Form encType=\"text/plain\" so we encode it into text\n\n\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n      _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\n\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\n\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {// no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\n\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\n\n\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\n\n\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n\n    if (!viewTransitionOpts || router.window == null || typeof router.window.document.startViewTransition !== \"function\") {\n      // Mid-navigation state update, or startViewTransition isn't available\n      optInStartTransition(() => setStateImpl(newState));\n    } else if (transition && renderDfd) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]); // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]); // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext.isTransitioning]); // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]); // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]); // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))))), null);\n}\n\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\n\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    unstable_viewTransition\n  } = _ref7,\n      rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext); // Rendered into <a href> for absolute URLs\n\n  let absoluteHref;\n  let isExternal = false;\n\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    unstable_viewTransition,\n    children\n  } = _ref8,\n      rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n    fetcherKey,\n    navigate,\n    reloadDocument,\n    replace,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    relative,\n    preventScrollReset,\n    unstable_viewTransition\n  } = _ref9,\n      props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {})); // Internal hooks\n\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n} // External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() => // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n\nlet fetcherId = 0;\n\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\n\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_viewTransition: options.unstable_viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n} // v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\n\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n} // TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\n\nfunction useFetcher(_temp3) {\n  var _route$matches;\n\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0; // Fetcher key handling\n\n  let [fetcherKey, setFetcherKey] = React.useState(key || \"\");\n\n  if (!fetcherKey) {\n    setFetcherKey(getUniqueFetcherId());\n  } // Registration/cleanup\n\n\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]); // Fetcher additions\n\n  let load = React.useCallback(href => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n\n    return FetcherForm;\n  }, [fetcherKey]); // Exposed FetcherWithComponents\n\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\n\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\n\n\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname; // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n} //#endregion\n\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"mappings":"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","names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","target","button","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","forEach","_","has","getAll","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","process","env","NODE_ENV","warning","getFormSubmissionInfo","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","createBrowserRouter","routes","opts","createRouter","future","_extends","v7_prependBasename","history","createBrowserHistory","window","hydrationData","parseHydrationData","mapRouteProperties","initialize","createHashRouter","createHashHistory","_window","state","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponseImpl","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","ViewTransitionContext","React","createContext","isTransitioning","displayName","FetchersContext","Map","START_TRANSITION","startTransitionImpl","startTransitionSafe","cb","Deferred","constructor","promise","Promise","resolve","reject","reason","RouterProvider","_ref","fallbackElement","router","setStateImpl","useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","useRef","v7_startTransition","optInStartTransition","useCallback","setState","newState","_ref2","deletedFetchers","unstable_viewTransitionOpts","viewTransitionOpts","current","delete","fetchers","fetcher","set","startViewTransition","skipTransition","currentLocation","nextLocation","useLayoutEffect","subscribe","useEffect","renderPromise","finished","finally","location","navigator","useMemo","createHref","encodeLocation","go","n","navigate","push","to","preventScrollReset","replace","dataRouterContext","static","Fragment","DataRouterContext","Provider","DataRouterStateContext","Router","navigationType","historyAction","initialized","DataRoutes","_ref3","useRoutesImpl","BrowserRouter","_ref4","children","historyRef","v5Compat","listen","HashRouter","_ref5","HistoryRouter","_ref6","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","_ref7","ref","onClick","relative","reloadDocument","unstable_viewTransition","rest","_objectWithoutPropertiesLoose","_excluded","useContext","NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","_ref8","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","_excluded2","useResolvedPath","useLocation","routerState","useViewTransitionState","toPathname","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","renderProps","ariaCurrent","filter","Boolean","join","Form","_ref9","forwardedRef","fetcherKey","onSubmit","props","_excluded3","submit","useSubmit","formAction","useFormAction","formMethod","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref10","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","invariant","useDataRouterState","_temp","replaceProp","useNavigate","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","fetcherId","getUniqueFetcherId","String","UseSubmit","currentRouteId","useRouteId","options","fetch","formEncType","fromRouteId","_temp2","routeContext","RouteContext","match","matches","slice","route","index","params","toString","joinPaths","useFetcher","_temp3","_route$matches","UseFetcher","routeId","id","setFetcherKey","getFetcher","deleteFetcher","load","submitImpl","FetcherForm","get","IDLE_FETCHER","fetcherWithComponents","useFetchers","UseFetchers","from","_ref11","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp4","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","useBeforeUnload","callback","capture","addEventListener","removeEventListener","usePrompt","_ref12","when","blocker","useBlocker","proceed","confirm","setTimeout","reset","currentPath","nextPath","matchPath"],"sources":["/Users/trantienngoc/Documents/LTS-Proj/portfolio/node_modules/react-router-dom/dom.ts","/Users/trantienngoc/Documents/LTS-Proj/portfolio/node_modules/react-router-dom/index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProviderProps,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      { deletedFetchers, unstable_viewTransitionOpts: viewTransitionOpts }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      if (\n        !viewTransitionOpts ||\n        router.window == null ||\n        typeof router.window.document.startViewTransition !== \"function\"\n      ) {\n        // Mid-navigation state update, or startViewTransition isn't available\n        optInStartTransition(() => setStateImpl(newState));\n      } else if (transition && renderDfd) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext.isTransitioning]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n              >\n                {state.initialized ? (\n                  <DataRoutes routes={router.routes} state={state} />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\ntype NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || \"\");\n  if (!fetcherKey) {\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n"]},"metadata":{},"sourceType":"module"}